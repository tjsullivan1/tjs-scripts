name: GitHub Actions PS Remoting Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  Explore-GitHub-Actions:
    runs-on: windows-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      # - uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      # - name: Invoke Az VM Run Command
      #   uses: azure/CLI@v1
      #   with:
      #     azcliversion: 2.56.0
      #     inlineScript: |
      #       az account set -s ${{ secrets.AZURE_SUBSCRIPTION }}
      #       az account show
      #       az vm run-command invoke -g nginx1_group -n iis --command-id RunPowerShellScript --scripts "Get-Process"
      # This cmdlet series fails on my local machine too. Need to dig into winrm
      - name: PsRemoting
        shell: pwsh
        run: |
          # Set-Item WSMan:\localhost\Client\TrustedHosts -Value '*'
          winrm set winrm/config/client '@{TrustedHosts="*"}'
          $secpasswd = ConvertTo-SecureString ${{ secrets.VM_PASSWORD }} -AsPlainText -Force
          $mycreds = New-Object System.Management.Automation.PSCredential ("tjs", $secpasswd)
          $session = New-PSSession -ComputerName tjsiis1.eastus.cloudapp.azure.com -Credential $mycreds
          Invoke-Command -Session $session -ScriptBlock { Get-Process }
          Remove-PSSession -Session $session
      - run: echo "üçè This job's status is ${{ job.status }}."
